name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U testuser -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Run unit tests
      env:
        DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
      run: |
        python -m unittest discover -s src -p '*_test.py'


    - name: Lint with Flake8
      run: |
        pip install flake8
        flake8 src

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Build and run application
      run: |
        docker-compose -f src/docker-compose.yml up --build -d

    - name: Verify deployment
      run: |
        curl --fail http://localhost:5000/ || exit 1

    - name: Stop Docker containers
      if: always()
      run: docker-compose -f src/docker-compose.yml down
